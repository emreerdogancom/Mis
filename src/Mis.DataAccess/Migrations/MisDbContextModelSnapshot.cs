// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mis.DataAccess.Concrete.EF.Contexts;

namespace Mis.DataAccess.Migrations
{
    [DbContext(typeof(MisDbContext))]
    partial class MisDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Mis.Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "DELL",
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 611, DateTimeKind.Local).AddTicks(988),
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "HP",
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 614, DateTimeKind.Local).AddTicks(6960),
                            IsActive = true
                        },
                        new
                        {
                            Id = 3,
                            BrandName = "Apple",
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 614, DateTimeKind.Local).AddTicks(6991),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FromFactorId")
                        .HasColumnType("int");

                    b.Property<int>("RamSlots")
                        .HasColumnType("int");

                    b.Property<int>("UsbPorts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromFactorId = 1,
                            RamSlots = 2,
                            UsbPorts = 5
                        },
                        new
                        {
                            Id = 2,
                            FromFactorId = 1,
                            RamSlots = 2,
                            UsbPorts = 10
                        },
                        new
                        {
                            Id = 3,
                            FromFactorId = 1,
                            RamSlots = 15,
                            UsbPorts = 0
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Desktop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Desktops");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.FromFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromFactorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FromFactors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(2165),
                            FromFactorName = "Tower",
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(2535),
                            FromFactorName = "Mid-Tower",
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Laptop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ScreenSize")
                        .HasColumnType("int");

                    b.Property<int>("UsbPorts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = 4,
                            ScreenSize = 0,
                            UsbPorts = 2
                        },
                        new
                        {
                            Id = 5,
                            ScreenSize = 0,
                            UsbPorts = 0
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.PCBasedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProcessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PCBasedProducts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProcessorId = 2
                        },
                        new
                        {
                            Id = 2,
                            ProcessorId = 3
                        },
                        new
                        {
                            Id = 3,
                            ProcessorId = 6
                        },
                        new
                        {
                            Id = 4,
                            ProcessorId = 4
                        },
                        new
                        {
                            Id = 5,
                            ProcessorId = 1
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProcessorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Processors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 615, DateTimeKind.Local).AddTicks(9808),
                            IsActive = true,
                            ProcessorName = "Atom"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(173),
                            IsActive = true,
                            ProcessorName = "I3"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(183),
                            IsActive = true,
                            ProcessorName = "I5"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(186),
                            IsActive = true,
                            ProcessorName = "I7"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(188),
                            IsActive = true,
                            ProcessorName = "I9"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 616, DateTimeKind.Local).AddTicks(190),
                            IsActive = true,
                            ProcessorName = "Xeon"
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 617, DateTimeKind.Local).AddTicks(9095),
                            IsActive = true,
                            Quantity = 10
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 617, DateTimeKind.Local).AddTicks(9702),
                            IsActive = true,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 617, DateTimeKind.Local).AddTicks(9712),
                            IsActive = true,
                            Quantity = 1000
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 617, DateTimeKind.Local).AddTicks(9714),
                            IsActive = true,
                            Quantity = 10000
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 3,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 13, 22, 47, 617, DateTimeKind.Local).AddTicks(9716),
                            IsActive = true,
                            Quantity = 100000
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Servers");

                    b.HasData(
                        new
                        {
                            Id = 3
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Tablet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Tablets");
                });
#pragma warning restore 612, 618
        }
    }
}
