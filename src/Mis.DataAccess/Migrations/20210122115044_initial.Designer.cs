// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mis.DataAccess.Concrete.EF.Contexts;

namespace Mis.DataAccess.Migrations
{
    [DbContext(typeof(MisDbContext))]
    [Migration("20210122115044_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Mis.Entities.Concrete.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandName = "DELL",
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 122, DateTimeKind.Local).AddTicks(3518),
                            IsActive = true
                        },
                        new
                        {
                            Id = 2,
                            BrandName = "HP",
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 125, DateTimeKind.Local).AddTicks(7540),
                            IsActive = true
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Computer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("FromFactorId")
                        .HasColumnType("int");

                    b.Property<int>("RamSlots")
                        .HasColumnType("int");

                    b.Property<int>("UsbPorts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Computers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FromFactorId = 1,
                            RamSlots = 5,
                            UsbPorts = 2
                        },
                        new
                        {
                            Id = 2,
                            FromFactorId = 1,
                            RamSlots = 15,
                            UsbPorts = 20
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Desktop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Desktops");

                    b.HasData(
                        new
                        {
                            Id = 1
                        },
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.FromFactor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromFactorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("FromFactors");
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Laptop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ScreenSize")
                        .HasColumnType("int");

                    b.Property<int>("UsbPorts")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Laptops");
                });

            modelBuilder.Entity("Mis.Entities.Concrete.PCBasedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProcessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PCBasedProducts");
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ProcessorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Processors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 127, DateTimeKind.Local).AddTicks(11),
                            IsActive = true,
                            ProcessorName = "Atom"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 127, DateTimeKind.Local).AddTicks(379),
                            IsActive = true,
                            ProcessorName = "I3"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 127, DateTimeKind.Local).AddTicks(390),
                            IsActive = true,
                            ProcessorName = "I5"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 127, DateTimeKind.Local).AddTicks(393),
                            IsActive = true,
                            ProcessorName = "I7"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 0,
                            CreatedDate = new DateTime(2021, 1, 22, 12, 50, 44, 127, DateTimeKind.Local).AddTicks(395),
                            IsActive = true,
                            ProcessorName = "I9"
                        });
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Server", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Mis.Entities.Concrete.Tablet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Tablets");
                });
#pragma warning restore 612, 618
        }
    }
}
